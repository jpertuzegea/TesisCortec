@model DAO.Personas

@*<script src="~/Js_Utilidades/Validacion/Departamento.js"></script>*@

@{
    Layout = null;
}

@using (Html.BeginForm("PersonaAdd", "Personas", FormMethod.Post, new { onsubmit = "return  validar_doble_clic()" }))
{ // el return indica que la accion del formulario llega false cuando ya le han dado clic una vez

    @Html.AntiForgeryToken()
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 style="color:#1ab394" class="modal-title"> Registro de Personas</h4>
    </div>

    <div class="modal-body">
        <div class="row">
            <div class="col-sm-6 b-r">
                <h3 class="m-t-none m-b"></h3>

                <div class="form-group">
                    <label>Tipo Documento </label>
                    @Html.DropDownList("TipoDocumento", null, "Seleccione una opcion", htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>Num Documento </label>
                    @Html.EditorFor(model => model.NumDocumento, new { htmlAttributes = new { @onkeyup = "UpperCase(this)", @class = "form-control" } })
                </div>

                <div class="form-group">
                    <label>Nombres y Apellidos </label>
                    @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @onkeyup = "UpperCase(this)", @class = "form-control" } })
                </div> 

                <div class="form-group">
                    <label>Email </label>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @onkeyup = "UpperCase(this)", @class = "form-control" } })
                </div>

                <div class="form-group">
                    <label>Ciudad </label>
                    @Html.EditorFor(model => model.Ciudad, new { htmlAttributes = new { @onkeyup = "UpperCase(this)", @class = "form-control" } })
                </div>
               

            </div>
            <div class="col-sm-6 ">
                <br />

                <div class="form-group">
                    <label>Departamento </label>
                    @Html.EditorFor(model => model.Departamento, new { htmlAttributes = new { @onkeyup = "UpperCase(this)", @class = "form-control" } })
                </div>
                <div class="form-group">
                    <label>Direccion </label>
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @onkeyup = "UpperCase(this)", @class = "form-control" } })
                </div>
                <div class="form-group">
                    <label>Telefono </label>
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @onkeyup = "UpperCase(this)", @class = "form-control" } })
                </div>
                <div class="form-group">
                    <label>Password </label>
                    @Html.PasswordFor(model => model.Clave, htmlAttributes: new { @class = "form-control" })
                </div>
                 
            </div>
            <div class="col-sm-4 "></div>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn btn-sm btn-primary pull-right m-t-n-xs" id="BotonRegistrar" type="submit"><strong>Registrar</strong></button>
    </div>
}
